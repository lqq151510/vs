import numpy as np

# x = np.array([1, 2, 3, 4, 5, 6, 7, 8])
# y = x
# y[0] = -1
# print(x)
# # [-1  2  3  4  5  6  7  8]
# print(y)
# # [-1  2  3  4  5  6  7  8]

# x = np.array([1, 2, 3, 4, 5, 6, 7, 8])
# y = x.copy()#深拷贝
# y[0] = -1
# print(x)
# # [1 2 3 4 5 6 7 8]
# print(y)
# # [-1  2  3  4  5  6  7  8]


# x = np.array([[11, 12, 13, 14, 15],
#               [16, 17, 18, 19, 20],
#               [21, 22, 23, 24, 25],
#               [26, 27, 28, 29, 30],
#               [31, 32, 33, 34, 35]])
# y = x.copy()
# y[::2, :3:2] = -1#::2：这是对行进行切片。: 表示选择所有行，而 2 表示步长为 2，即选择所有偶数行（从 0 开始计数）。
# #:3:2：这是对列进行切片。: 表示选择所有列，而 3 表示从第 3 列开始，2 表示步长为 2，即选择第 3 列和第 5 列。
# print(x)
# print(y)

# x = np.array([1, 2, 3, 4, 5, 6, 7, 8])
# print(x[2])  # 3

# x = np.array([[11, 12, 13, 14, 15],
#               [16, 17, 18, 19, 20],
#               [21, 22, 23, 24, 25],
#               [26, 27, 28, 29, 30],
#               [31, 32, 33, 34, 35]])
# print(x[2])  # [21 22 23 24 25]
# print(x[2][1])  # 22
# print(x[2, 1])  # 22

# x = np.array([1, 2, 3, 4, 5, 6, 7, 8])
# print(x[0:2])  # [1 2]
# #用下标0~5,以2为步长选取数组
# print(x[1:5:2])  # [2 4]
# print(x[2:])  # [3 4 5 6 7 8]
# print(x[:2])  # [1 2]
# print(x[-2:])  # [7 8]
# print(x[:-2])  # [1 2 3 4 5 6]
# print(x[:])  # [1 2 3 4 5 6 7 8]
# #利用负数下标翻转数组
# print(x[::-1])  # [8 7 6 5 4 3 2 1]

# x = np.array([[11, 12, 13, 14, 15],
#               [16, 17, 18, 19, 20],
#               [21, 22, 23, 24, 25],
#               [26, 27, 28, 29, 30],
#               [31, 32, 33, 34, 35]])
# print(x[0:2])
# # [[11 12 13 14 15]
# #  [16 17 18 19 20]]

# print(x[1:5:2])
# # [[16 17 18 19 20]
# #  [26 27 28 29 30]]

# print(x[2:])
# # [[21 22 23 24 25]
# #  [26 27 28 29 30]
# #  [31 32 33 34 35]]

# print(x[:2])
# # [[11 12 13 14 15]
# #  [16 17 18 19 20]]

# print(x[-2:])
# # [[26 27 28 29 30]
# #  [31 32 33 34 35]]

# print(x[:-2])
# # [[11 12 13 14 15]
# #  [16 17 18 19 20]
# #  [21 22 23 24 25]]

# print(x[:])
# # [[11 12 13 14 15]
# #  [16 17 18 19 20]
# #  [21 22 23 24 25]
# #  [26 27 28 29 30]
# #  [31 32 33 34 35]]

# print(x[2, :])  # [21 22 23 24 25]
# print(x[:, 2])  # [13 18 23 28 33]
# print(x[0, 1:4])  # [12 13 14]
# print(x[1:4, 0])  # [16 21 26]
# print(x[1:3, 2:4])
# # [[18 19]
# #  [23 24]]

# print(x[:, :])
# # [[11 12 13 14 15]
# #  [16 17 18 19 20]
# #  [21 22 23 24 25]
# #  [26 27 28 29 30]
# #  [31 32 33 34 35]]

# print(x[::2, ::2])
# # [[11 13 15]
# #  [21 23 25]
# #  [31 33 35]]

# print(x[::-1, :])
# # [[31 32 33 34 35]
# #  [26 27 28 29 30]
# #  [21 22 23 24 25]
# #  [16 17 18 19 20]
# #  [11 12 13 14 15]]

# print(x[:, ::-1])
# # [[15 14 13 12 11]
# #  [20 19 18 17 16]
# #  [25 24 23 22 21]

# x = np.array([[11, 12, 13, 14, 15],
#               [16, 17, 18, 19, 20],
#               [21, 22, 23, 24, 25],
#               [26, 27, 28, 29, 30],
#               [31, 32, 33, 34, 35]])
# print(x)
# # [[11 12 13 14 15]
# #  [16 17 18 19 20]
# #  [21 22 23 24 25]
# #  [26 27 28 29 30]
# #  [31 32 33 34 35]]

# x[0::2, 1::3] = 0
# print(x)
# # [[11  0 13 14  0]
# #  [16 17 18 19 20]
# #  [21  0 23 24  0]
# #  [26 27 28 29 30]
# #  [31  0 33 34  0]]


# x = np.random.randint(1, 100, [2, 2, 3])#即这个数组有2个2x3的矩阵。
# print(x)


# print(x[1, ...])#x[1, ...]表示选择数组x的第一个2x3矩阵（因为索引从0开始）


# print(x[..., 2])#x[..., 2]表示选择数组x中每个矩阵的第三列


# x = np.array([1, 2, 3, 4, 5, 6, 7, 8])
# r = [0, 1, 2]
# print(x[r])
# # [1 2 3]

# r = [0, 1, -1]
# print(x[r])
# # [1 2 8]

# x = np.array([[11, 12, 13, 14, 15],
#               [16, 17, 18, 19, 20],
#               [21, 22, 23, 24, 25],
#               [26, 27, 28, 29, 30],
#               [31, 32, 33, 34, 35]])

# r = [0, 1, 2]
# print(x[r])
# # [[11 12 13 14 15]
# #  [16 17 18 19 20]
# #  [21 22 23 24 25]]

# r = [0, 1, -1]
# print(x[r])

# # [[11 12 13 14 15]
# #  [16 17 18 19 20]
# #  [31 32 33 34 35]]

# r = [0, 1, 2]
# c = [2, 3, 4]
# y = x[r, c]
# print(y)
# # [13 19 25]


# x = np.array([1, 2, 3, 4, 5, 6, 7, 8])
# r = np.array([[0, 1], [3, 4]])#r = np.array([[0, 1], [3, 4]])表示一个2x2的数组，其中每个元素都是一个整数。

# print(x[r])

# x = np.array([[11, 12, 13, 14, 15],
#               [16, 17, 18, 19, 20],
#               [21, 22, 23, 24, 25],
#               [26, 27, 28, 29, 30],
#               [31, 32, 33, 34, 35]])

# y = x[0:3, [1, 2, 2]]#0:3表示在行的方向上，选择第0行到第2行（不包括第3行），即选择数组的前三行。
# #[1, 2, 2]表示在列的方向上，选择第1列、第2列和第2列（索引从0开始计数）。
# print(y)
# # [[12 13 13]
# #  [17 18 18]
# #  [22 23 23]]


# import numpy as np

# x = np.array([1, 2, 3, 4, 5, 6, 7, 8])
# r = [0, 1, 2]
# print(np.take(x, r))
# # [1 2 3]

# r = [0, 1, -1]
# print(np.take(x, r))
# # [1 2 8]

# x = np.array([[11, 12, 13, 14, 15],
#               [16, 17, 18, 19, 20],
#               [21, 22, 23, 24, 25],
#               [26, 27, 28, 29, 30],
#               [31, 32, 33, 34, 35]])

# r = [0, 1, 2]
# print(np.take(x, r, axis=0))
# # [[11 12 13 14 15]
# #  [16 17 18 19 20]
# #  [21 22 23 24 25]]

# r = [0, 1, -1]
# print(np.take(x, r, axis=0))#axis：指定沿哪个轴进行选择。默认为 None，表示将 arr 摊平后选择
# # [[11 12 13 14 15]
# #  [16 17 18 19 20]
# #  [31 32 33 34 35]]

# x = np.array([[11, 12, 13, 14, 15],
#               [16, 17, 18, 19, 20],
#               [21, 22, 23, 24, 25],
#               [26, 27, 28, 29, 30],
#               [31, 32, 33, 34, 35]])
# r = [0, 1, 2]
# c = [2, 3, 4]
# y = np.take(x, [r, c])
# print(y)
# #[[11 12 13]
# # [13 14 15]] 

# x = np.array([1, 2, 3, 4, 5, 6, 7, 8])
# y = x > 5
# print(y)
# # [False False False False False  True  True  True]
# print(x[x > 5])
# # [6 7 8]

# 导入NumPy库，用于进行数值计算
# import numpy as np
# # 创建一个NumPy数组x，包含一些NaN值和一些整数
# x = np.array([np.nan, 1, 2, np.nan, 3, 4, 5])
# # 使用np.isnan函数检查x数组中的每个元素是否为NaN，返回一个布尔数组
# # np.isnan(x)的结果为：[ True False False  True False False False]
# # 使用np.logical_not函数对布尔数组进行逻辑非操作，即将True变为False，False变为True
# # np.logical_not(np.isnan(x))的结果为：[False  True  True False  True  True  True]
# y = np.logical_not(np.isnan(x))
# # 使用布尔数组y作为索引来筛选x数组中的非NaN元素
# # x[y]的结果为：[1. 2. 3. 4. 5.]
# print(x[y])
# # [1. 2. 3. 4. 5.]

# x = np.array([[11, 12, 13, 14, 15],
#               [16, 17, 18, 19, 20],
#               [21, 22, 23, 24, 25],
#               [26, 27, 28, 29, 30],
#               [31, 32, 33, 34, 35]])
# y = x > 25
# print(y)
# # [[False False False False False]
# #  [False False False False False]
# #  [False False False False False]
# #  [ True  True  True  True  True]
# #  [ True  True  True  True  True]]
# print(x[x > 25])
# # [26 27 28 29 30 31 32 33 34 35]

import numpy as np  # 导入NumPy库，用于进行数值计算
# 创建一个5x5的二维数组x
x = np.array([[11, 12, 13, 14, 15],
              [16, 17, 18, 19, 20],
              [21, 22, 23, 24, 25],
              [26, 27, 28, 29, 30],
              [31, 32, 33, 34, 35]])

# # 使用np.apply_along_axis函数沿第0轴（列）对数组x进行求和操作
# # np.sum是求和函数，0表示沿第0轴（列）进行操作
# y = np.apply_along_axis(np.sum, 0, x)#行
# print(y)  # [105 110 115 120 125]
# y = np.apply_along_axis(np.sum, 1, x)
# print(y)  # [ 65  90 115 140 165]
# y = np.apply_along_axis(np.mean, 0, x)#列
# print(y)  # [21. 22. 23. 24. 25.]
# y = np.apply_along_axis(np.mean, 1, x)
# print(y)  # [13. 18. 23. 28. 33.]


def my_func(x):
    return (x[0] + x[-1]) * 0.5


y = np.apply_along_axis(my_func, 0, x)#行
print(y)  # [21. 22. 23. 24. 25.]
y = np.apply_along_axis(my_func, 1, x)
print(y)  # [13. 18. 23. 28. 33
